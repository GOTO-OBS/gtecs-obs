-- MySQL Script generated by MySQL Workbench
-- Tue Jun  6 15:41:48 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema goto_obs
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema goto_obs
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `goto_obs` DEFAULT CHARACTER SET utf8 ;
USE `goto_obs` ;

-- -----------------------------------------------------
-- Table `goto_obs`.`events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `goto_obs`.`events` ;

CREATE TABLE IF NOT EXISTS `goto_obs`.`events` (
  `eventID` INT NOT NULL AUTO_INCREMENT,
  `ivo` VARCHAR(255) NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `source` VARCHAR(255) NOT NULL COMMENT 'LIGO, SWIFT etc.',
  PRIMARY KEY (`eventID`),
  UNIQUE INDEX `ivo_UNIQUE` (`ivo` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goto_obs`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `goto_obs`.`users` ;

CREATE TABLE IF NOT EXISTS `goto_obs`.`users` (
  `userKey` INT(11) NOT NULL AUTO_INCREMENT,
  `user_name` TEXT NOT NULL,
  `password` TEXT NOT NULL,
  `fullName` TEXT NOT NULL,
  PRIMARY KEY (`userKey`),
  UNIQUE INDEX `user_name_UNIQUE` (`user_name`(10) ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 24
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `goto_obs`.`survey`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `goto_obs`.`survey` ;

CREATE TABLE IF NOT EXISTS `goto_obs`.`survey` (
  `tileID` INT NOT NULL AUTO_INCREMENT,
  `ra` FLOAT NOT NULL COMMENT 'decimal degrees',
  `decl` FLOAT NOT NULL COMMENT 'decimal degrees',
  PRIMARY KEY (`tileID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goto_obs`.`ligo_tiles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `goto_obs`.`ligo_tiles` ;

CREATE TABLE IF NOT EXISTS `goto_obs`.`ligo_tiles` (
  `tileID` INT NOT NULL AUTO_INCREMENT,
  `ra` FLOAT NOT NULL,
  `decl` FLOAT NOT NULL,
  `probability` FLOAT NOT NULL,
  `events_eventID` INT NOT NULL,
  PRIMARY KEY (`tileID`),
  INDEX `fk_ligo_tiles_events1_idx` (`events_eventID` ASC),
  CONSTRAINT `fk_ligo_tiles_events1`
    FOREIGN KEY (`events_eventID`)
    REFERENCES `goto_obs`.`events` (`eventID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goto_obs`.`mpointings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `goto_obs`.`mpointings` ;

CREATE TABLE IF NOT EXISTS `goto_obs`.`mpointings` (
  `rpID` INT NOT NULL AUTO_INCREMENT,
  `object` TEXT NOT NULL,
  `ra` FLOAT NOT NULL COMMENT 'decimal degrees',
  `decl` FLOAT NOT NULL COMMENT 'decimal degrees',
  `rank` INT(11) NOT NULL,
  `start_rank` INT(11) NOT NULL,
  `minAlt` FLOAT NOT NULL,
  `maxSunAlt` FLOAT NOT NULL DEFAULT -15,
  `minTime` FLOAT NOT NULL,
  `maxMoon` CHAR(1) NOT NULL,
  `ToO` TINYINT(1) NOT NULL DEFAULT 0,
  `scheduled` TINYINT(1) NOT NULL DEFAULT 0,
  `events_eventID` INT NULL,
  `users_userKey` INT(11) NOT NULL,
  `survey_tileID` INT NULL,
  `ligo_tiles_tileID` INT NULL,
  `infinite` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`rpID`),
  INDEX `fk_repeat_pointing_events1_idx` (`events_eventID` ASC),
  INDEX `fk_repeat_pointing_users1_idx` (`users_userKey` ASC),
  INDEX `fk_mpointings_survey_tiles1_idx` (`survey_tileID` ASC),
  INDEX `scheduled_idx` (`scheduled` ASC),
  INDEX `fk_mpointings_ligo_tiles1_idx` (`ligo_tiles_tileID` ASC),
  CONSTRAINT `fk_repeat_pointing_events1`
    FOREIGN KEY (`events_eventID`)
    REFERENCES `goto_obs`.`events` (`eventID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_repeat_pointing_users1`
    FOREIGN KEY (`users_userKey`)
    REFERENCES `goto_obs`.`users` (`userKey`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mpointings_survey_tiles1`
    FOREIGN KEY (`survey_tileID`)
    REFERENCES `goto_obs`.`survey` (`tileID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mpointings_ligo_tiles1`
    FOREIGN KEY (`ligo_tiles_tileID`)
    REFERENCES `goto_obs`.`ligo_tiles` (`tileID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goto_obs`.`repeats`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `goto_obs`.`repeats` ;

CREATE TABLE IF NOT EXISTS `goto_obs`.`repeats` (
  `repeatID` INT NOT NULL AUTO_INCREMENT,
  `repeatNum` INT NOT NULL COMMENT 'can be -1 for infinite repeaters',
  `waitTime` FLOAT NOT NULL COMMENT 'time to wait before scheduling this repeat',
  `valid_duration` FLOAT NULL COMMENT 'how long after the startUTC the repeat should be valid for in minutes.',
  `status` ENUM('upcoming', 'aborted', 'completed', 'interrupted', 'pending', 'running', 'deleted', 'expired') NOT NULL DEFAULT 'upcoming',
  `ts` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `mpointings_rpID` INT NOT NULL,
  PRIMARY KEY (`repeatID`),
  INDEX `fk_repeats_repeat_pointing1_idx` (`mpointings_rpID` ASC),
  INDEX `status_idx` (`status` ASC),
  CONSTRAINT `fk_repeats_repeat_pointing1`
    FOREIGN KEY (`mpointings_rpID`)
    REFERENCES `goto_obs`.`mpointings` (`rpID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goto_obs`.`pointings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `goto_obs`.`pointings` ;

CREATE TABLE IF NOT EXISTS `goto_obs`.`pointings` (
  `pointingID` INT(24) NOT NULL AUTO_INCREMENT,
  `object` TEXT NOT NULL COMMENT 'object name',
  `ra` FLOAT NOT NULL COMMENT 'in decimal degrees',
  `decl` FLOAT NOT NULL COMMENT 'in decimal degrees',
  `rank` INT(1) UNSIGNED NOT NULL,
  `minAlt` FLOAT NOT NULL,
  `maxSunAlt` FLOAT NOT NULL DEFAULT -15 COMMENT 'degrees	',
  `minTime` FLOAT NOT NULL,
  `maxMoon` CHAR(1) NOT NULL,
  `startUTC` DATETIME NOT NULL,
  `stopUTC` DATETIME NOT NULL,
  `ToO` TINYINT(1) UNSIGNED NOT NULL,
  `status` ENUM('running', 'aborted', 'completed', 'interrupted', 'pending', 'deleted', 'expired') NOT NULL DEFAULT 'pending',
  `ts` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `events_eventID` INT NULL,
  `users_userKey` INT(11) NOT NULL,
  `repeats_repeatID` INT NULL,
  `mpointings_rpID` INT NULL,
  `ligo_tiles_tileID` INT NULL,
  PRIMARY KEY (`pointingID`),
  INDEX `fk_pointings_events1_idx` (`events_eventID` ASC),
  INDEX `fk_pointings_users1_idx` (`users_userKey` ASC),
  INDEX `fk_pointings_repeats1_idx` (`repeats_repeatID` ASC),
  INDEX `fk_pointings_mpointings1_idx` (`mpointings_rpID` ASC),
  INDEX `status_idx` (`status` ASC),
  INDEX `start_idx` (`startUTC` ASC),
  INDEX `stop_idx` (`stopUTC` ASC),
  INDEX `fk_pointings_ligo_tiles1_idx` (`ligo_tiles_tileID` ASC),
  CONSTRAINT `fk_pointings_events1`
    FOREIGN KEY (`events_eventID`)
    REFERENCES `goto_obs`.`events` (`eventID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pointings_users1`
    FOREIGN KEY (`users_userKey`)
    REFERENCES `goto_obs`.`users` (`userKey`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pointings_repeats1`
    FOREIGN KEY (`repeats_repeatID`)
    REFERENCES `goto_obs`.`repeats` (`repeatID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pointings_mpointings1`
    FOREIGN KEY (`mpointings_rpID`)
    REFERENCES `goto_obs`.`mpointings` (`rpID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pointings_ligo_tiles1`
    FOREIGN KEY (`ligo_tiles_tileID`)
    REFERENCES `goto_obs`.`ligo_tiles` (`tileID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 17073
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `goto_obs`.`exposures`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `goto_obs`.`exposures` ;

CREATE TABLE IF NOT EXISTS `goto_obs`.`exposures` (
  `expID` INT(24) NOT NULL AUTO_INCREMENT,
  `raoff` FLOAT NOT NULL DEFAULT 0.0 COMMENT 'RA offset (arcsecs)',
  `decoff` FLOAT NOT NULL DEFAULT 0.0 COMMENT 'dec offset (arcsec)',
  `typeFlag` ENUM('SCIENCE', 'FOCUS', 'DARK', 'BIAS', 'FLAT', 'STD') NOT NULL,
  `filter` CHAR(2) NOT NULL,
  `exptime` FLOAT NOT NULL,
  `numexp` INT(11) UNSIGNED NOT NULL,
  `binning` INT(11) UNSIGNED NOT NULL,
  `otaMask` INT NULL COMMENT 'bit mask to allocate to individual UTs. NULL means send to all',
  `pointings_pointingID` INT(12) NULL,
  `mpointings_rpID` INT NULL,
  PRIMARY KEY (`expID`),
  INDEX `fk_exposures_pointings_idx` (`pointings_pointingID` ASC),
  INDEX `fk_exposures_repeat_pointing1_idx` (`mpointings_rpID` ASC),
  CONSTRAINT `fk_exposures_pointings`
    FOREIGN KEY (`pointings_pointingID`)
    REFERENCES `goto_obs`.`pointings` (`pointingID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_exposures_repeat_pointing1`
    FOREIGN KEY (`mpointings_rpID`)
    REFERENCES `goto_obs`.`mpointings` (`rpID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 126598
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `goto_obs`.`obslog`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `goto_obs`.`obslog` ;

CREATE TABLE IF NOT EXISTS `goto_obs`.`obslog` (
  `obsID` INT(24) NOT NULL,
  `frame` VARCHAR(30) NOT NULL COMMENT 'frame or file number',
  `UTstart` DATETIME NOT NULL,
  `object` TEXT NOT NULL,
  `type` TEXT NOT NULL,
  `ra` FLOAT NOT NULL,
  `decl` FLOAT NOT NULL,
  `exptime` FLOAT NOT NULL,
  `airmass` FLOAT NOT NULL,
  `filter` CHAR(2) NOT NULL,
  `binning` INT(11) UNSIGNED NOT NULL,
  `foc` INT(11) UNSIGNED NOT NULL,
  `temp` FLOAT NOT NULL,
  `otaID` INT NOT NULL COMMENT 'identifies OTA',
  `camID` INT NOT NULL COMMENT 'identifies camera',
  `pointings_pointingID` INT(12) NOT NULL,
  PRIMARY KEY (`obsID`),
  UNIQUE INDEX `frame` (`frame` ASC),
  INDEX `fk_obslog_pointings1_idx` (`pointings_pointingID` ASC),
  INDEX `ota_key` (`otaID` ASC),
  INDEX `cam_key` (`camID` ASC),
  CONSTRAINT `fk_obslog_pointings1`
    FOREIGN KEY (`pointings_pointingID`)
    REFERENCES `goto_obs`.`pointings` (`pointingID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 204285
DEFAULT CHARACTER SET = latin1;

SET SQL_MODE = '';
GRANT USAGE ON *.* TO goto;
 DROP USER goto;
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE USER 'goto' IDENTIFIED BY 'gotoobs';

GRANT ALL ON `goto_obs`.* TO 'goto';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
USE `goto_obs`;

DELIMITER $$

USE `goto_obs`$$
DROP TRIGGER IF EXISTS `goto_obs`.`repeats_AFTER_UPDATE` $$
USE `goto_obs`$$
/* When repeats table is updated, this trigger performs the following tasks:
   - updates the scheduled attribute in the corresponding Mpointing
   - increments the Mpointing rank by 10, if this is not a infinite Mpointing */
CREATE DEFINER = CURRENT_USER TRIGGER `goto_obs`.`repeats_AFTER_UPDATE` AFTER UPDATE ON `repeats` FOR EACH ROW
BEGIN
	DECLARE isinfinite INT;
    SELECT `infinite` INTO isinfinite FROM `mpointings` WHERE (NEW.`mpointings_rpID` = `mpointings`.`rpID`);
	IF (NEW.ts <> OLD.ts AND NEW.status NOT IN ('running', 'pending')) THEN
		IF isinfinite = 0 THEN
			UPDATE `mpointings` SET `rank` = `rank` + 10, `scheduled` = 0 WHERE (NEW.`mpointings_rpID` = `mpointings`.`rpID`);
		ELSE
			UPDATE `mpointings` SET `scheduled` = 0 WHERE (NEW.`mpointings_rpID` = `mpointings`.`rpID`);
        END IF;
	END IF;
	IF (NEW.ts <> OLD.ts AND NEW.status = 'pending') THEN
		UPDATE `mpointings` SET `scheduled` = 1 WHERE (NEW.`mpointings_rpID` = `mpointings`.`rpID`);
    END IF;
END$$


USE `goto_obs`$$
DROP TRIGGER IF EXISTS `goto_obs`.`pointings_AFTER_INSERT` $$
USE `goto_obs`$$
/* This trigger is repsonsible for updating the status of repeats to the status of their matching pointing
when the pointing is inserted into the database. */
CREATE DEFINER = CURRENT_USER TRIGGER `goto_obs`.`pointings_AFTER_INSERT` AFTER INSERT ON `pointings` FOR EACH ROW
BEGIN
    DECLARE mpointing_rpID INT;
    DECLARE isinfinite INT;
	IF (NEW.repeats_repeatID is not NULL) THEN
        /* mirror status between pointing and repeat */
		UPDATE `repeats` SET `status` = NEW.status WHERE (NEW.repeats_repeatID = `repeats`.`repeatID`);

        /* insert a new repeat into the repeats table if required */
		SELECT `mpointings_rpID` INTO mpointing_rpID FROM `repeats` WHERE (NEW.repeats_repeatID = `repeats`.`repeatID`);
		SELECT `infinite` INTO isinfinite FROM `mpointings` WHERE (mpointing_rpID = `mpointings`.`rpID`);
        IF isinfinite = 1 THEN
            CREATE TEMPORARY TABLE tmptable SELECT
				`repeatNum`, `waitTime`, `valid_duration`, `status`, `mpointings_rpID`
            FROM `repeats` WHERE (NEW.repeats_repeatID = `repeats`.`repeatID`);

            UPDATE tmptable SET status = "upcoming";
            UPDATE tmptable SET repeatNum = repeatNum + 1;

			INSERT INTO `repeats` (`repeatNum`, `waitTime`, `valid_duration`, `status`, `mpointings_rpID`)
                SELECT * from tmptable;

            DROP TEMPORARY TABLE IF EXISTS tmptable;
		END IF;
    END IF;
END$$


USE `goto_obs`$$
DROP TRIGGER IF EXISTS `goto_obs`.`pointings_AFTER_UPDATE` $$
USE `goto_obs`$$
/* This trigger updates status entry of a repeat, when the matching pointing is updated. */
CREATE DEFINER = CURRENT_USER TRIGGER `goto_obs`.`pointings_AFTER_UPDATE` AFTER UPDATE ON `pointings` FOR EACH ROW
BEGIN
	IF (NEW.repeats_repeatID is not NULL) THEN
		UPDATE `repeats` SET `status` = NEW.status WHERE (NEW.repeats_repeatID = `repeats`.`repeatID`);
    END IF;
END$$


DELIMITER ;
