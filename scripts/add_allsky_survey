#!/usr/bin/env python3
"""A script to fill G-TeCS database using GOTO-tile."""

import time

from gtecs.obs import database as db


TARGET_PARAMS = {'start_rank': 999,
                 'num_todo': -1,
                 'wait_time': 4320,
                 'min_time': (60 + 30) * 3,
                 'max_sunalt': -12,
                 }

EXPS_PARAMS = [{'num_exp': 3, 'exptime': 60, 'filt': 'L'}]


def run():
    """Create the targets and add them to the database."""
    with db.open_session() as session:
        # Get default User
        user = db.get_user(session, username='default')

        # Get the current grid
        grid = db.get_current_grid(session)

        # Create a Survey
        print('Creating all-sky survey...')
        survey = db.Survey(name='Allsky_survey')
        survey.grid = grid
        session.add(survey)

        # Create SurveyTiles, one for each GridTile
        survey_tiles = []
        start = time.time()
        for grid_tile in grid.grid_tiles:
            survey_tile = db.SurveyTile(weight=1)  # Equal weights
            survey_tile.survey = survey
            survey_tile.grid_tile = grid_tile
            survey_tiles.append(survey_tile)
        print('  took {:.2f} secs'.format(time.time() - start))

        print('Adding {} survey tiles to database...'.format(len(survey_tiles)))
        start = time.time()
        db.insert_items(session, survey_tiles)
        print('  took {:.2f} secs'.format(time.time() - start))

        # Create Targets
        targets = []
        print('Creating targets...')
        start = time.time()
        for survey_tile in survey_tiles:
            target_params = TARGET_PARAMS.copy()
            target_params['object_name'] = survey.name + '_' + survey_tile.grid_tile.name

            target = db.Target(**target_params,
                               user=user,
                               grid_tile=survey_tile.grid_tile,
                               survey_tile=survey_tile,
                               )
            for exps_params in EXPS_PARAMS:
                target.exposure_sets.append(db.ExposureSet(**exps_params))

            targets.append(target)
        print('  took {:.2f} secs'.format(time.time() - start))

        # Add to database
        print('Adding {} targets to database...'.format(len(targets)))
        start = time.time()
        db.insert_items(session, targets)
        print('  took {:.2f} secs'.format(time.time() - start))

    print('Done')


if __name__ == '__main__':
    run()
