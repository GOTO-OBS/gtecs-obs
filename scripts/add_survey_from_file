#!/usr/bin/env python3
"""A script add a survey of defined points into the G-TeCS database."""

import argparse
import time

from gtecs.obs import database as db


TARGET_PARAMS = {'start_rank': None,
                 }
STRATEGY_PARAMS = {'num_todo': -1,
                   'wait_time': 4320,  # 3 days
                   }
EXPS_PARAMS = [{'num_exp': 3, 'exptime': 60, 'filt': 'L'}]


def get_coords_from_file(filename):
    """Define mini-survey tiles centres and ranks."""
    ras = []
    decs = []
    ranks = []
    tilenames = []
    with open(filename) as file:
        for i, line in enumerate(file):
            if line[0] == '#':
                continue
            tilename, ra, dec, *_ = line.split()
            if i > 800:
                break
            rank = (i - 1) // 100 + 990

            # print(name, ra, dec, rank)

            ras.append(ra)
            decs.append(dec)
            ranks.append(rank)
            tilenames.append(tilename)

    return ras, decs, ranks, tilenames


def run(filename, survey_name):
    """Create the targets and add them to the database."""
    with db.open_session() as session:
        # Get default User
        user = db.get_user(session, username='default')

        # Create a Survey
        print('Creating survey...')
        if not survey_name.endswith('survey'):
            survey_name += '_survey'
        survey = db.Survey(name=survey_name)

        # Create the tile centres
        ras, decs, ranks, names = get_coords_from_file(filename)

        # Create Targets
        print('Creating targets...')
        start = time.time()
        targets = []
        for ra, dec, rank, name in zip(ras, decs, ranks, names):
            target_params = TARGET_PARAMS.copy()
            target_params['name'] = name
            target_params['ra'] = float(ra)
            target_params['dec'] = float(dec)
            target_params['start_rank'] = rank

            target = db.Target(**target_params,
                               user=user,
                               strategy=db.Strategy(**STRATEGY_PARAMS.copy()),
                               survey=survey,
                               )
            for exps_params in EXPS_PARAMS:
                target.exposure_sets.append(db.ExposureSet(**exps_params))

            targets.append(target)
        print('  took {:.2f} secs'.format(time.time() - start))

        # Add to database
        print('Adding {} targets to database...'.format(len(targets)))
        start = time.time()
        db.insert_items(session, targets)
        print('  took {:.2f} secs'.format(time.time() - start))

    print('Done')


if __name__ == '__main__':
    description = """Create a mini-survey around a given centre."""

    parser = argparse.ArgumentParser(description=description,
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)

    parser.add_argument('file', help='File with tiles', type=str)
    parser.add_argument('name', help='Survey name', type=str)

    args = parser.parse_args()

    filename = args.file
    survey_name = args.name

    run(filename, survey_name)
