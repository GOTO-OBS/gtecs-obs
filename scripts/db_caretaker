#!/usr/bin/env python3
"""A script to take care of the queue database."""

import os
import sys
import time

from astropy.time import Time

from gtecs.obs import database as db


def there_can_only_be_one():
    """Quit if this process is already running (dodgy kludge!)."""
    ps = os.popen('ps -fu ' + os.environ['LOGNAME'] + ' | grep -v cron | grep -v emacs').read()
    if ps.count(sys.argv[0]) > 1:
        print(sys.argv[0], ' already running')
        sys.exit()


if __name__ == '__main__':
    there_can_only_be_one()

    print('~~~~~~~~~~~~~~~~~~~')
    print(Time.now())

    # Schedule new Pointings for any unscheduled Targets
    with db.open_session() as session:
        print('Getting any unscheduled Targets...')
        unscheduled_targets = db.get_targets(session, status='unscheduled')

        if len(unscheduled_targets) > 0:
            print('> Found {} unscheduled Targets...'.format(len(unscheduled_targets)))

            print('> Creating {} new Pointings'.format(len(unscheduled_targets)))
            start = time.time()
            pointings = [target.get_next_pointing() for target in unscheduled_targets]
            pointings = [p for p in pointings if p is not None]
            print('>    took {:.2f} secs'.format(time.time() - start))

            print('> Inserting {} Pointings into DB'.format(len(pointings)))
            start = time.time()
            db.insert_items(session, pointings)
            print('>    took {:.2f} secs'.format(time.time() - start))
        else:
            print('> None found')
