#!/usr/bin/env python3
"""A script to take care of the queue database."""

import os
import sys
import time

from astropy.time import Time

from gtecs.obs import database as db


def there_can_only_be_one():
    """Quit if this process is already running (dodgy kludge!)."""
    ps = os.popen('ps -fu ' + os.environ['LOGNAME'] + ' | grep -v cron | grep -v emacs').read()
    if ps.count(sys.argv[0]) > 1:
        print(sys.argv[0], ' already running')
        sys.exit()


there_can_only_be_one()


print('~~~~~~~~~~~~~~~~~~~')
print(Time.now())

# schedule Pointings for unscheduled Mpointings
with db.open_session() as session:
    print('Getting any unscheduled Mpointings...')
    unscheduled_mps = db.get_mpointings(session, status='unscheduled')

    if len(unscheduled_mps) > 0:
        print('> Creating {} new Pointings'.format(len(unscheduled_mps)))
        start = time.time()
        pointings = [mp.get_next_pointing() for mp in unscheduled_mps]
        pointings = [p for p in pointings if p is not None]
        print('>    took {:.2f} secs'.format(time.time() - start))

        print('> Inserting {} Pointings into DB'.format(len(pointings)))
        start = time.time()
        db.insert_items(session, pointings)
        print('>    took {:.2f} secs'.format(time.time() - start))
    else:
        print('> None found')
