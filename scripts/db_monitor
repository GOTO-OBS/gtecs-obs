#!/usr/bin/env python
# A simple script to monitor what's in the GOTO database
# MJD @ Sheffield, 2016

from __future__ import print_function

import sys

from astropy.time import Time

import gtecs.database as db
from gtecs.tecs_modules import misc

t = Time.now()

if len(sys.argv) > 1:
    show_all = sys.argv[1] in ['-a', '--all']
else:
    show_all = False

with db.open_session() as session:
    all_pointings = db.get_pointings(session)
    n_all = len(all_pointings)
    n_survey = len([p.survey is not None for p in all_pointings])
    print("{} points in database - {} targeted and {} survey".format(
                                           n_all, n_all-n_survey, n_survey))

    running, _ = db.get_queue(session)
    if running:
        print(misc.ytxt('CURRENTLY OBSERVING: ID %i \n' %running.pointingID))
    else:
        print('\n')

    for pointing in all_pointings:
        if show_all or pointing.survey is None:
            string = '{: <6.0f} | {: >20} | {: >3.0f} | {: >6.2f} | {: >6.2f} | {} | {} |'.format(
                                            pointing.pointingID,
                                            pointing.objectName,
                                            pointing.rank,
                                            pointing.ra, pointing.decl,
                                            int(pointing.survey is not None),
                                            pointing.startUTC)

            print(string, end=' ')

            if pointing.status == 'running':
                status = misc.ytxt('RUNNING')
            elif pointing.status == 'completed':
                status = misc.gtxt('completed')
            elif pointing.status == 'pending':
                if t > Time(pointing.startUTC):
                    status = misc.btxt('pending')
                else:
                    status = 'waiting'
            else:
                status = pointing.status
            print(status, end='\n')

    print("{} points in database - {} targeted and {} survey".format(
                                           n_all, n_all-n_survey, n_survey))
